/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flowershopsystem;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author scollex
 */
public class PickupConfirm extends javax.swing.JFrame {

    /**
     * Creates new form PickupConfirm
     */
    public int id;
    public String status = "pending";

    public PickupConfirm() {
        initComponents();
    }

    public PickupConfirm(int id) {
        initComponents();
        setID(id);
    }

    public void setID(int id) {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat format1 = new SimpleDateFormat("HH:mm:ss");
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        for (OrderDetails order : MainMenu.orderList) {
            if (order.getOrderid() == id) {
                for (ProductOrder p : order.product) {
                    Object[] rowData = {p.p.name, p.pAmount, p.pTotal};
                    dm.addRow(rowData);
                }
                lblDateTime.setText("Order at: " + format.format(order.orderDate.getTime()));
                lblOrderID.setText(String.valueOf(id));
                lblCustomer.setText(order.cust.getName());
                lblSubtotal.setText("RM " + String.valueOf(order.total));
                if (order.delivery.status.equalsIgnoreCase("pending")) {
                    lblCollectedTime.setText("Will be collected around: " + format1.format(order.delivery.getDate_of_deliver().getTime()));
                } else {
                    lblCollectedTime.setText("Order collected at: " + format1.format(order.delivery.getDate_of_collect().getTime()));
                }
                if(order.deliveryMethod.equalsIgnoreCase("Pick up")){
                    jAddPanel7.setVisible(false);
                }else{
                    jAddUnit7.setText(order.delivery.getAdd().unit);
                    jTextArea1.setText(order.delivery.getAdd().street);
                    jAddCity7.setText(order.delivery.getAdd().city);
                    jAddState7.setText(order.delivery.getAdd().state);
                    jAddPostcode7.setText(String.valueOf(order.delivery.getAdd().postcode));
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCollect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        lblOrderID = new javax.swing.JLabel();
        lblCustomer = new javax.swing.JLabel();
        lblDateTime = new javax.swing.JLabel();
        lblCollectedTime = new javax.swing.JLabel();
        btnCancel1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        jAddPanel7 = new javax.swing.JPanel();
        jAddUnit7 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jAddCity7 = new javax.swing.JTextField();
        jAddState7 = new javax.swing.JTextField();
        jAddPostcode7 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Order ID:");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Customer:");

        btnCollect.setBackground(new java.awt.Color(51, 153, 0));
        btnCollect.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnCollect.setText("Collected");
        btnCollect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCollectActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Amount", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
        }

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Order Item:");

        btnCancel.setBackground(new java.awt.Color(204, 0, 51));
        btnCancel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblOrderID.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblOrderID.setText("lblOrder");

        lblCustomer.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblCustomer.setText("lblCustomer");

        lblDateTime.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblDateTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDateTime.setText("jLabel4");

        lblCollectedTime.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblCollectedTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCollectedTime.setText("jLabel4");

        btnCancel1.setBackground(new java.awt.Color(204, 153, 0));
        btnCancel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnCancel1.setVisible(false);
        btnCancel1.setText("Change Pick Up Time");
        btnCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Subtotal:");

        lblSubtotal.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubtotal.setText("jLabel5");

        jAddUnit7.setEditable(false);
        jAddUnit7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel50.setText("Address");

        jAddCity7.setEditable(false);
        jAddCity7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jAddState7.setEditable(false);
        jAddState7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jAddPostcode7.setEditable(false);
        jAddPostcode7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jLabel51.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel51.setText("No / Unit");

        jLabel52.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel52.setText("Street / Jalan");

        jLabel53.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel53.setText("State");

        jLabel54.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel54.setText("City");

        jLabel55.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel55.setText("Postcode");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jAddPanel7Layout = new javax.swing.GroupLayout(jAddPanel7);
        jAddPanel7.setLayout(jAddPanel7Layout);
        jAddPanel7Layout.setHorizontalGroup(
            jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAddPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addGap(60, 60, 60)
                .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(jLabel53)
                    .addComponent(jLabel55))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAddUnit7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAddCity7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAddPostcode7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(jAddPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAddState7, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jAddPanel7Layout.setVerticalGroup(
            jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAddPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddPanel7Layout.createSequentialGroup()
                        .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jAddPanel7Layout.createSequentialGroup()
                                .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jAddUnit7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel51)
                                    .addComponent(jLabel52))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jAddCity7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel53)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jAddPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAddPostcode7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel55)
                            .addComponent(jLabel54)
                            .addComponent(jAddState7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel50))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCollectedTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAddPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnCollect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(btnCancel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblOrderID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCollectedTime, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jAddPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubtotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCollect)
                    .addComponent(btnCancel)
                    .addComponent(btnCancel1))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCollectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCollectActionPerformed
        // TODO add your handling code here:
        for (OrderDetails order : MainMenu.orderList) {
            if (order.getOrderid() == Integer.parseInt(lblOrderID.getText())) {
                order.delivery.status = "Done";
                order.delivery.setDate_of_collect(Calendar.getInstance());
                JOptionPane.showMessageDialog(this, "Order " + order.orderid + " Collected!", "Record updated", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                break;
            }
        }

    }//GEN-LAST:event_btnCollectActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        for (OrderDetails order : MainMenu.orderList) {
            if (order.getOrderid() == Integer.parseInt(lblOrderID.getText())) {
                order.delivery.status = "Pending";
                order.delivery.setDate_of_collect(null);
                JOptionPane.showMessageDialog(this, "Order " + order.orderid + " Collected!", "Record updated", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                break;
            }
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancel1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PickupConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PickupConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PickupConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PickupConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PickupConfirm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCancel;
    public javax.swing.JButton btnCancel1;
    public javax.swing.JButton btnCollect;
    private javax.swing.JTextField jAddCity;
    private javax.swing.JTextField jAddCity1;
    private javax.swing.JTextField jAddCity2;
    private javax.swing.JTextField jAddCity3;
    private javax.swing.JTextField jAddCity4;
    private javax.swing.JTextField jAddCity5;
    private javax.swing.JTextField jAddCity6;
    private javax.swing.JTextField jAddCity7;
    private javax.swing.JPanel jAddPanel;
    private javax.swing.JPanel jAddPanel1;
    private javax.swing.JPanel jAddPanel2;
    private javax.swing.JPanel jAddPanel3;
    private javax.swing.JPanel jAddPanel4;
    private javax.swing.JPanel jAddPanel5;
    private javax.swing.JPanel jAddPanel6;
    private javax.swing.JPanel jAddPanel7;
    private javax.swing.JTextField jAddPostcode;
    private javax.swing.JTextField jAddPostcode1;
    private javax.swing.JTextField jAddPostcode2;
    private javax.swing.JTextField jAddPostcode3;
    private javax.swing.JTextField jAddPostcode4;
    private javax.swing.JTextField jAddPostcode5;
    private javax.swing.JTextField jAddPostcode6;
    private javax.swing.JTextField jAddPostcode7;
    private javax.swing.JTextField jAddState;
    private javax.swing.JTextField jAddState1;
    private javax.swing.JTextField jAddState2;
    private javax.swing.JTextField jAddState3;
    private javax.swing.JTextField jAddState4;
    private javax.swing.JTextField jAddState5;
    private javax.swing.JTextField jAddState6;
    private javax.swing.JTextField jAddState7;
    private javax.swing.JTextField jAddStreet;
    private javax.swing.JTextField jAddStreet1;
    private javax.swing.JTextField jAddStreet2;
    private javax.swing.JTextField jAddStreet3;
    private javax.swing.JTextField jAddStreet4;
    private javax.swing.JTextField jAddStreet5;
    private javax.swing.JTextField jAddStreet6;
    private javax.swing.JTextField jAddUnit;
    private javax.swing.JTextField jAddUnit1;
    private javax.swing.JTextField jAddUnit2;
    private javax.swing.JTextField jAddUnit3;
    private javax.swing.JTextField jAddUnit4;
    private javax.swing.JTextField jAddUnit5;
    private javax.swing.JTextField jAddUnit6;
    private javax.swing.JTextField jAddUnit7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JLabel lblCollectedTime;
    public javax.swing.JLabel lblCustomer;
    public javax.swing.JLabel lblDateTime;
    public javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblSubtotal;
    // End of variables declaration//GEN-END:variables

    public void loadOrderIntoTable(int id) {
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
        for (int i = 0; i < MainMenu.prodOrderList.size(); i++) {
            if (MainMenu.prodOrderList.get(i).orderid == id) {
                Object[] data = {MainMenu.prodOrderList.get(i).pName,
                    MainMenu.prodOrderList.get(i).pAmount,
                    MainMenu.prodOrderList.get(i).pTotal};
                dm.addRow(data);
            }

        }
        jTable1.setModel(dm);
    }

    private void DisplayPickup() {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        for (OrderDetails order : MainMenu.orderList) {
            System.out.println(order.orderid + " = " + id);
            if (order.orderid == id) {
                System.out.println("found");
                lblOrderID.setText(String.valueOf(id));
                lblCustomer.setText(order.cust.name);
                lblDateTime.setText("Order at: " + format.format(order.getOrderDate().getTime()));
                lblCollectedTime.setText("To be collected at: " + format.format(order.getAddress().getDate_of_deliver().getTime()));
                break;
            }
        }
        if (status.equalsIgnoreCase("done")) {
            btnCollect.setEnabled(false);
        } else {
            btnCancel.setEnabled(false);
        }
    }
}
